# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake g++ make pypy3

    ## Clear build directory.
    rm -rf /planner/builds

    ## Build planner.
    cd /planner
    pypy3 build.py

    ## Strip binaries.
    strip --strip-all /planner/builds/release/bin/downward /planner/builds/release/bin/preprocess-h2

# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: run

%files from build
    /planner/driver
    /planner/fast-downward.py
    /planner/builds/release/bin

%post
    apt-get update
    apt-get -y install --no-install-recommends pypy3
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    #!/bin/bash

    set -euo pipefail

    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    pypy3 /planner/fast-downward.py \
        --plan-file "$PLANFILE" \
        --alias "seq-opt-scorpion-2023" \
        --overall-time-limit 30m \
        "$DOMAINFILE" \
        "$PROBLEMFILE"

%labels
Name        Scorpion 2023
Description Saturated cost partitioning over abstraction heuristics.
Authors     Jendrik Seipp <jendrik.seipp@liu.se>
License     GPL 3
Tracks      optimal
SupportsDerivedPredicates                       no
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
